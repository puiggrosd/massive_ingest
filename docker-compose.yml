version: '3.12'
services:
  base:
    build: .
    command: /bin/bash
    stdin_open: true
    tty: true
    environment:
        MONGODB_URL: mongodb://mongodb:27017
        POSTGRES_HOST: postgres
        POSTGRES_USER: user
        POSTGRES_PASSWORD: password
        POSTGRES_DB: mydatabase
        RABBITMQ_HOST: rabbitmq
        BACKEND: backend
  
  backend:
    ports:
      - "8000:8000"
    extends:
      service: base
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    command: >
      uvicorn main:app --host 0.0.0.0 --port 8000 --workers 10
      
  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db

  postgres:
    image: postgres:latest
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d mydatabase"]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
        POSTGRES_HOST: postgres
        POSTGRES_USER: user
        POSTGRES_PASSWORD: password
        POSTGRES_DB: mydatabase
  

  rabbitmq:
    image: rabbitmq:3-management
    depends_on:
      - postgres
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD-SHELL", "rabbitmqctl status"]
      interval: 10s
      timeout: 5s
      retries: 5

  ingest_data_worker:
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy
    command: >
      python ingest_data_worker.py
    extends:
      service: base

  ingest_image_worker:
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy
    volumes:
      - ./image_data:/app/image_data
    command: >
      python ingest_image_worker.py
    extends:
      service: base

volumes:
  mongo_data:
  postgres_data:

